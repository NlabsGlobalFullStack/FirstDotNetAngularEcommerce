// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eCommerceServer.WebApi.Context;

#nullable disable

namespace eCommerceServer.WebApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231230172232_productsAddedtoDb")]
    partial class productsAddedtoDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("eCommerceServer.WebApi.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("eCommerceServer.WebApi.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CoverImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("96b6068c-0cdc-42b0-adc5-d1b5bdd78533"),
                            CoverImageUrl = "apple.png",
                            CreatedDate = new DateTime(2023, 12, 30, 20, 22, 31, 641, DateTimeKind.Local).AddTicks(1386),
                            Description = "",
                            Name = "Elma",
                            Price = 20m,
                            Slug = ""
                        },
                        new
                        {
                            Id = new Guid("eec3dabc-d837-4636-8c50-004ddcb2db8d"),
                            CoverImageUrl = "pear.png",
                            CreatedDate = new DateTime(2023, 12, 30, 20, 22, 31, 641, DateTimeKind.Local).AddTicks(1408),
                            Description = "",
                            Name = "Armut",
                            Price = 30m,
                            Slug = ""
                        },
                        new
                        {
                            Id = new Guid("3a518234-daff-41bf-94a1-a444af941db5"),
                            CoverImageUrl = "watermelon.png",
                            CreatedDate = new DateTime(2023, 12, 30, 20, 22, 31, 641, DateTimeKind.Local).AddTicks(1461),
                            Description = "",
                            Name = "Karpuz",
                            Price = 120m,
                            Slug = ""
                        },
                        new
                        {
                            Id = new Guid("cb28af49-5fae-4794-9210-f1925dcd63f9"),
                            CoverImageUrl = "banana.png",
                            CreatedDate = new DateTime(2023, 12, 30, 20, 22, 31, 641, DateTimeKind.Local).AddTicks(1464),
                            Description = "",
                            Name = "Muz",
                            Price = 50m,
                            Slug = ""
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
