// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eCommerceServer.WebApi.Context;

#nullable disable

namespace eCommerceServer.WebApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231230214806_UpdateDatabaseSchema")]
    partial class UpdateDatabaseSchema
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("eCommerceServer.WebApi.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2154e583-04ab-4a9e-a691-44f72925a0e5"),
                            Email = "turkmvc@gmail.com",
                            FirstName = "Cuma",
                            IsAdmin = true,
                            LastName = "KÖSE",
                            Password = "String123",
                            UserName = "turkmvc"
                        });
                });

            modelBuilder.Entity("eCommerceServer.WebApi.Entities.Basket", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Baskets");
                });

            modelBuilder.Entity("eCommerceServer.WebApi.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("eCommerceServer.WebApi.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CoverImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cdbbb2c0-f875-42e2-aa6d-bc7cc6cad86b"),
                            CoverImageUrl = "apple.png",
                            CreatedDate = new DateTime(2023, 12, 31, 0, 48, 5, 362, DateTimeKind.Local).AddTicks(108),
                            Description = "",
                            Name = "Elma",
                            Price = 20m,
                            Slug = "",
                            UserId = new Guid("2154e583-04ab-4a9e-a691-44f72925a0e5")
                        },
                        new
                        {
                            Id = new Guid("2fe76515-d06a-4b68-b5a3-37b18e0ee3de"),
                            CoverImageUrl = "pear.png",
                            CreatedDate = new DateTime(2023, 12, 31, 0, 48, 5, 362, DateTimeKind.Local).AddTicks(179),
                            Description = "",
                            Name = "Armut",
                            Price = 30m,
                            Slug = "",
                            UserId = new Guid("2154e583-04ab-4a9e-a691-44f72925a0e5")
                        },
                        new
                        {
                            Id = new Guid("e259f894-ef8f-49bf-b909-f29e3f8f9ad7"),
                            CoverImageUrl = "watermelon.png",
                            CreatedDate = new DateTime(2023, 12, 31, 0, 48, 5, 362, DateTimeKind.Local).AddTicks(184),
                            Description = "",
                            Name = "Karpuz",
                            Price = 120m,
                            Slug = "",
                            UserId = new Guid("2154e583-04ab-4a9e-a691-44f72925a0e5")
                        },
                        new
                        {
                            Id = new Guid("7763f01b-7b37-413f-86dc-323d8c1548c7"),
                            CoverImageUrl = "banana.png",
                            CreatedDate = new DateTime(2023, 12, 31, 0, 48, 5, 362, DateTimeKind.Local).AddTicks(187),
                            Description = "",
                            Name = "Muz",
                            Price = 50m,
                            Slug = "",
                            UserId = new Guid("2154e583-04ab-4a9e-a691-44f72925a0e5")
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
